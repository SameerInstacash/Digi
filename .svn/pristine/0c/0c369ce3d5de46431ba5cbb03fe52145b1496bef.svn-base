//
//  DeadPixelVC.swift
//  SmartExchange
//
//  Created by Abhimanyu Saraswat on 18/03/17.
//  Copyright Â© 2017 ZeroWaste. All rights reserved.
//

import UIKit
import PopupDialog

class DeadPixelVC: UIViewController {

    @IBOutlet weak var startTestBtn: UIButton!
    var timer: Timer?
    var timerIndex = 0
    
    func setRandomBackgroundColor() {
        timerIndex += 1
        let colors = [
            UIColor(red: 255/255, green: 0/255, blue: 0/255, alpha: 1),
            UIColor(red: 0/255, green: 255/255, blue: 0/255, alpha: 1),
            UIColor(red: 0/255, green: 0/255, blue: 255/255, alpha: 1),
            UIColor(red: 255/255, green: 255/255, blue: 255/255, alpha: 1),
            UIColor(red: 0/255, green: 0/255, blue: 0/255, alpha: 1),
            UIColor(red: 255/255, green: 255/255, blue: 255/255, alpha: 1)
        ]
        switch timerIndex {
        case 5:
            self.view.backgroundColor = colors[timerIndex]
            timer?.invalidate()
            timer = nil
            
            
            // Prepare the popup assets
            let title = "Dead Pixel Test"
            let message = "Did you see any black or white spots on the screen?"
            
            
            // Create the dialog
            let popup = PopupDialog(title: title, message: message)
            
            // Create buttons
            let buttonOne = CancelButton(title: "Yes") {
                print("Dead Pixel Failed")
                let vc = self.storyboard?.instantiateViewController(withIdentifier: "ProximityView") as! ProximityVC
                self.present(vc, animated: true, completion: nil)
            }
            
            let buttonTwo = DefaultButton(title: "No") {
                print("Dead Pixel Passed!")
                let vc = self.storyboard?.instantiateViewController(withIdentifier: "ProximityView") as! ProximityVC
                self.present(vc, animated: true, completion: nil)
            }
            
           
            
            // Add buttons to dialog
            // Alternatively, you can use popup.addButton(buttonOne)
            // to add a single button
            popup.addButtons([buttonOne, buttonTwo])
            
            // Present dialog
            self.present(popup, animated: true, completion: nil)
            break
            
        default:
            self.view.backgroundColor = colors[timerIndex]
        }
        
        
    }
    
   
        
    
    
    
    @IBAction func startDeadPixelTest(_ sender: AnyObject) {
        
        timer = Timer.scheduledTimer(timeInterval: 2, target: self, selector: #selector(self.setRandomBackgroundColor), userInfo: nil, repeats: true)
        self.view.backgroundColor = UIColor(red: 255/255, green: 0/255, blue: 0/255, alpha: 1)
        self.startTestBtn.isHidden = true
        
    }
    
    
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}
